import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
"use strict";
Object.defineProperty(exports, "__esModule", { value: true }): column.width }}> {column.header}
              </th>))}
          </tr>
        </thead>
        <tbody className = require("react");
function DataTable({ data: unknown, columns: unknown, className = '': unknown, onRowClick }: unknown) {
    return (<div className={`overflow-x-auto ${className}`}>
      <table className="min-w-full divide-y divide-gray-200">
        <thead className="bg-gray-50">
          <tr>
            {columns.map((column, idx) => (<th key={idx} scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" style={{ width"bg-white divide-y divide-gray-200">
          {data.map((item, rowIdx) => (<tr key={rowIdx} onClick={() => onRowClick?.(item)} className={onRowClick ? 'cursor-pointer hover:bg-gray-50' : ''}>
              {columns.map((column, colIdx) => (<td key={colIdx} className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {typeof column.accessor === 'function'
                    ? column.accessor(item): String(item[column.accessor])}
                </td>))}
            </tr>))}
        </tbody>
      </table>
    </div>);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS10YWJsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRhdGEtdGFibGUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBZUEsOEJBeUNDO0FBeERELGlDQUEwQjtBQWUxQixTQUFnQixTQUFTLENBQUksRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFNBQVMsR0FBRyxFQUFFLEVBQUUsVUFBVSxFQUFxQjtJQUMzRixPQUFPLENBQ0wsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsbUJBQW1CLFNBQVMsRUFBRSxDQUFDLENBQzdDO01BQUEsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLHFDQUFxQyxDQUNwRDtRQUFBLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQzNCO1VBQUEsQ0FBQyxFQUFFLENBQ0Q7WUFBQSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUM1QixDQUFDLEVBQUUsQ0FDRCxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FDVCxLQUFLLENBQUMsS0FBSyxDQUNYLFNBQVMsQ0FBQyxnRkFBZ0YsQ0FDMUYsS0FBSyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBRS9CO2dCQUFBLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FDaEI7Y0FBQSxFQUFFLEVBQUUsQ0FBQyxDQUNOLENBQUMsQ0FDSjtVQUFBLEVBQUUsRUFBRSxDQUNOO1FBQUEsRUFBRSxLQUFLLENBQ1A7UUFBQSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsbUNBQW1DLENBQ2xEO1VBQUEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FDMUIsQ0FBQyxFQUFFLENBQ0QsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQ1osT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsVUFBVSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FDbEMsU0FBUyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBRS9EO2NBQUEsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FDL0IsQ0FBQyxFQUFFLENBQ0QsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQ1osU0FBUyxDQUFDLG1EQUFtRCxDQUU3RDtrQkFBQSxDQUFDLE9BQU8sTUFBTSxDQUFDLFFBQVEsS0FBSyxVQUFVO29CQUNwQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7b0JBQ3ZCLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUNuQztnQkFBQSxFQUFFLEVBQUUsQ0FBQyxDQUNOLENBQUMsQ0FDSjtZQUFBLEVBQUUsRUFBRSxDQUFDLENBQ04sQ0FBQyxDQUNKO1FBQUEsRUFBRSxLQUFLLENBQ1Q7TUFBQSxFQUFFLEtBQUssQ0FDVDtJQUFBLEVBQUUsR0FBRyxDQUFDLENBQ1AsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgQ29sdW1uPFQ+IHtcbiAgaGVhZGVyOiBzdHJpbmc7XG4gIGFjY2Vzc29yOiBrZXlvZiBUIHwgKChkYXRhOiBUKSA9PiBzdHJpbmcgfCBudW1iZXIpO1xuICB3aWR0aD86IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIERhdGFUYWJsZVByb3BzPFQ+IHtcbiAgZGF0YTogVFtdO1xuICBjb2x1bW5zOiBDb2x1bW48VD5bXTtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBvblJvd0NsaWNrPzogKGl0ZW06IFQpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBEYXRhVGFibGU8VD4oeyBkYXRhLCBjb2x1bW5zLCBjbGFzc05hbWUgPSAnJywgb25Sb3dDbGljayB9OiBEYXRhVGFibGVQcm9wczxUPikge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtgb3ZlcmZsb3cteC1hdXRvICR7Y2xhc3NOYW1lfWB9PlxuICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cIm1pbi13LWZ1bGwgZGl2aWRlLXkgZGl2aWRlLWdyYXktMjAwXCI+XG4gICAgICAgIDx0aGVhZCBjbGFzc05hbWU9XCJiZy1ncmF5LTUwXCI+XG4gICAgICAgICAgPHRyPlxuICAgICAgICAgICAge2NvbHVtbnMubWFwKChjb2x1bW4sIGlkeCkgPT4gKFxuICAgICAgICAgICAgICA8dGhcbiAgICAgICAgICAgICAgICBrZXk9e2lkeH1cbiAgICAgICAgICAgICAgICBzY29wZT1cImNvbFwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicHgtNiBweS0zIHRleHQtbGVmdCB0ZXh0LXhzIGZvbnQtbWVkaXVtIHRleHQtZ3JheS01MDAgdXBwZXJjYXNlIHRyYWNraW5nLXdpZGVyXCJcbiAgICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogY29sdW1uLndpZHRoIH19XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7Y29sdW1uLmhlYWRlcn1cbiAgICAgICAgICAgICAgPC90aD5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvdHI+XG4gICAgICAgIDwvdGhlYWQ+XG4gICAgICAgIDx0Ym9keSBjbGFzc05hbWU9XCJiZy13aGl0ZSBkaXZpZGUteSBkaXZpZGUtZ3JheS0yMDBcIj5cbiAgICAgICAgICB7ZGF0YS5tYXAoKGl0ZW0sIHJvd0lkeCkgPT4gKFxuICAgICAgICAgICAgPHRyXG4gICAgICAgICAgICAgIGtleT17cm93SWR4fVxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblJvd0NsaWNrPy4oaXRlbSl9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT17b25Sb3dDbGljayA/ICdjdXJzb3ItcG9pbnRlciBob3ZlcjpiZy1ncmF5LTUwJyA6ICcnfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7Y29sdW1ucy5tYXAoKGNvbHVtbiwgY29sSWR4KSA9PiAoXG4gICAgICAgICAgICAgICAgPHRkXG4gICAgICAgICAgICAgICAgICBrZXk9e2NvbElkeH1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTYgcHktNCB3aGl0ZXNwYWNlLW5vd3JhcCB0ZXh0LXNtIHRleHQtZ3JheS01MDBcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIHt0eXBlb2YgY29sdW1uLmFjY2Vzc29yID09PSAnZnVuY3Rpb24nXG4gICAgICAgICAgICAgICAgICAgID8gY29sdW1uLmFjY2Vzc29yKGl0ZW0pXG4gICAgICAgICAgICAgICAgICAgIDogU3RyaW5nKGl0ZW1bY29sdW1uLmFjY2Vzc29yXSl9XG4gICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L3Rib2R5PlxuICAgICAgPC90YWJsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdfQ==
export {};
