import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
"use strict";
Object.defineProperty(exports, "__esModule", { value: true }): value,
        });
    };
    const handleCapabilityChange: value,
        }): value,
        });
    };
    const clearFilters   = require("react");
const Select_1 = require("../ui/Select/Select");
const Button_1 = require("../ui/Button/Button");
const lucide_react_1 = require("lucide-react");
const AgentFilters = ( { filters, onFilterChange, availableCapabilities, availableModels, }) => {
    const handleStatusChange = (value) => {
        onFilterChange({
            ...filters,
            status (value) => {
        onFilterChange({
            ...filters,
            capability (value) => {
        onFilterChange({
            ...filters,
            model () => {
        onFilterChange({}): application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWdlbnRGaWx0ZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQWdlbnRGaWx0ZXJzLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBMEI7QUFDMUIsZ0RBTTZCO0FBQzdCLGdEQUE2QztBQUM3QywrQ0FBb0Q7QUFlN0MsTUFBTSxZQUFZLEdBQWdDLENBQUMsRUFDeEQsT0FBTyxFQUNQLGNBQWMsRUFDZCxxQkFBcUIsRUFDckIsZUFBZSxHQUNoQixFQUFFLEVBQUU7SUFDSCxNQUFNLGtCQUFrQixHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUU7UUFDM0MsY0FBYyxDQUFDO1lBQ2IsR0FBRyxPQUFPO1lBQ1YsTUFBTSxFQUFFLEtBQXdDO1NBQ2pELENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQztJQUVGLE1BQU0sc0JBQXNCLEdBQUcsQ0FBQyxLQUFhLEVBQUUsRUFBRTtRQUMvQyxjQUFjLENBQUM7WUFDYixHQUFHLE9BQU87WUFDVixVQUFVLEVBQUUsS0FBSztTQUNsQixDQUFDLENBQUM7SUFDTCxDQUFDLENBQUM7SUFFRixNQUFNLGlCQUFpQixHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUU7UUFDMUMsY0FBYyxDQUFDO1lBQ2IsR0FBRyxPQUFPO1lBQ1YsS0FBSyxFQUFFLEtBQUs7U0FDYixDQUFDLENBQUM7SUFDTCxDQUFDLENBQUM7SUFFRixNQUFNLFlBQVksR0FBRyxHQUFHLEVBQUU7UUFDeEIsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3JCLENBQUMsQ0FBQztJQUVGLE1BQU0sZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFOUQsT0FBTyxDQUNMLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxtQ0FBbUMsQ0FDaEQ7TUFBQSxDQUFDLGVBQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FDL0Q7UUFBQSxDQUFDLHNCQUFhLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FDbEM7VUFBQSxDQUFDLG9CQUFXLENBQUMsV0FBVyxDQUFDLGtCQUFrQixFQUM3QztRQUFBLEVBQUUsc0JBQWEsQ0FDZjtRQUFBLENBQUMsc0JBQWEsQ0FDWjtVQUFBLENBQUMsbUJBQVUsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxtQkFBVSxDQUM3QztVQUFBLENBQUMsbUJBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxtQkFBVSxDQUNqRDtVQUFBLENBQUMsbUJBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxtQkFBVSxDQUM3QztRQUFBLEVBQUUsc0JBQWEsQ0FDakI7TUFBQSxFQUFFLGVBQU0sQ0FFUjs7TUFBQSxDQUFDLGVBQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsc0JBQXNCLENBQUMsQ0FDdkU7UUFBQSxDQUFDLHNCQUFhLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FDbEM7VUFBQSxDQUFDLG9CQUFXLENBQUMsV0FBVyxDQUFDLHNCQUFzQixFQUNqRDtRQUFBLEVBQUUsc0JBQWEsQ0FDZjtRQUFBLENBQUMsc0JBQWEsQ0FDWjtVQUFBLENBQUMscUJBQXFCLENBQUMsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQyxDQUN6QyxDQUFDLG1CQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQzdDO2NBQUEsQ0FBQyxVQUFVLENBQ2I7WUFBQSxFQUFFLG1CQUFVLENBQUMsQ0FDZCxDQUFDLENBQ0o7UUFBQSxFQUFFLHNCQUFhLENBQ2pCO01BQUEsRUFBRSxlQUFNLENBRVI7O01BQUEsQ0FBQyxlQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLENBQzdEO1FBQUEsQ0FBQyxzQkFBYSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQ2xDO1VBQUEsQ0FBQyxvQkFBVyxDQUFDLFdBQVcsQ0FBQyxpQkFBaUIsRUFDNUM7UUFBQSxFQUFFLHNCQUFhLENBQ2Y7UUFBQSxDQUFDLHNCQUFhLENBQ1o7VUFBQSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQzlCLENBQUMsbUJBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FDbkM7Y0FBQSxDQUFDLEtBQUssQ0FDUjtZQUFBLEVBQUUsbUJBQVUsQ0FBQyxDQUNkLENBQUMsQ0FDSjtRQUFBLEVBQUUsc0JBQWEsQ0FDakI7TUFBQSxFQUFFLGVBQU0sQ0FFUjs7TUFBQSxDQUFDLGdCQUFnQixJQUFJLENBQ25CLENBQUMsZUFBTSxDQUNMLE9BQU8sQ0FBQyxPQUFPLENBQ2YsSUFBSSxDQUFDLElBQUksQ0FDVCxPQUFPLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FDdEIsSUFBSSxDQUFDLENBQUMsQ0FBQyxnQkFBQyxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUcsQ0FBQyxDQUVoQzs7UUFDRixFQUFFLGVBQU0sQ0FBQyxDQUNWLENBRUQ7O01BQUEsQ0FBQyxlQUFNLENBQ0wsT0FBTyxDQUFDLFNBQVMsQ0FDakIsSUFBSSxDQUFDLElBQUksQ0FDVCxJQUFJLENBQUMsQ0FBQyxDQUFDLGdDQUFpQixDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUcsQ0FBQyxDQUVoRDs7TUFDRixFQUFFLGVBQU0sQ0FDVjtJQUFBLEVBQUUsR0FBRyxDQUFDLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQztBQTVGVyxRQUFBLFlBQVksZ0JBNEZ2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBTZWxlY3QsXG4gIFNlbGVjdFRyaWdnZXIsXG4gIFNlbGVjdFZhbHVlLFxuICBTZWxlY3RDb250ZW50LFxuICBTZWxlY3RJdGVtLFxufSBmcm9tICcuLi91aS9TZWxlY3QvU2VsZWN0JztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4uL3VpL0J1dHRvbi9CdXR0b24nO1xuaW1wb3J0IHsgU2xpZGVyc0hvcml6b250YWwsIFggfSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuXG5pbnRlcmZhY2UgQWdlbnRGaWx0ZXJzIHtcbiAgc3RhdHVzPzogJ2FjdGl2ZScgfCAnaW5hY3RpdmUnIHwgJ2Vycm9yJztcbiAgY2FwYWJpbGl0eT86IHN0cmluZztcbiAgbW9kZWw/OiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBBZ2VudEZpbHRlcnNQcm9wcyB7XG4gIGZpbHRlcnM6IEFnZW50RmlsdGVycztcbiAgb25GaWx0ZXJDaGFuZ2U6IChmaWx0ZXJzOiBBZ2VudEZpbHRlcnMpID0+IHZvaWQ7XG4gIGF2YWlsYWJsZUNhcGFiaWxpdGllczogc3RyaW5nW107XG4gIGF2YWlsYWJsZU1vZGVsczogc3RyaW5nW107XG59XG5cbmV4cG9ydCBjb25zdCBBZ2VudEZpbHRlcnM6IFJlYWN0LkZDPEFnZW50RmlsdGVyc1Byb3BzPiA9ICh7XG4gIGZpbHRlcnMsXG4gIG9uRmlsdGVyQ2hhbmdlLFxuICBhdmFpbGFibGVDYXBhYmlsaXRpZXMsXG4gIGF2YWlsYWJsZU1vZGVscyxcbn0pID0+IHtcbiAgY29uc3QgaGFuZGxlU3RhdHVzQ2hhbmdlID0gKHZhbHVlOiBzdHJpbmcpID0+IHtcbiAgICBvbkZpbHRlckNoYW5nZSh7XG4gICAgICAuLi5maWx0ZXJzLFxuICAgICAgc3RhdHVzOiB2YWx1ZSBhcyAnYWN0aXZlJyB8ICdpbmFjdGl2ZScgfCAnZXJyb3InLFxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUNhcGFiaWxpdHlDaGFuZ2UgPSAodmFsdWU6IHN0cmluZykgPT4ge1xuICAgIG9uRmlsdGVyQ2hhbmdlKHtcbiAgICAgIC4uLmZpbHRlcnMsXG4gICAgICBjYXBhYmlsaXR5OiB2YWx1ZSxcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVNb2RlbENoYW5nZSA9ICh2YWx1ZTogc3RyaW5nKSA9PiB7XG4gICAgb25GaWx0ZXJDaGFuZ2Uoe1xuICAgICAgLi4uZmlsdGVycyxcbiAgICAgIG1vZGVsOiB2YWx1ZSxcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBjbGVhckZpbHRlcnMgPSAoKSA9PiB7XG4gICAgb25GaWx0ZXJDaGFuZ2Uoe30pO1xuICB9O1xuXG4gIGNvbnN0IGhhc0FjdGl2ZUZpbHRlcnMgPSBPYmplY3QudmFsdWVzKGZpbHRlcnMpLnNvbWUoQm9vbGVhbik7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC13cmFwIGl0ZW1zLWNlbnRlciBnYXAtNFwiPlxuICAgICAgPFNlbGVjdCB2YWx1ZT17ZmlsdGVycy5zdGF0dXN9IG9uVmFsdWVDaGFuZ2U9e2hhbmRsZVN0YXR1c0NoYW5nZX0+XG4gICAgICAgIDxTZWxlY3RUcmlnZ2VyIGNsYXNzTmFtZT1cInctWzE4MHB4XVwiPlxuICAgICAgICAgIDxTZWxlY3RWYWx1ZSBwbGFjZWhvbGRlcj1cIkZpbHRlciBieSBzdGF0dXNcIiAvPlxuICAgICAgICA8L1NlbGVjdFRyaWdnZXI+XG4gICAgICAgIDxTZWxlY3RDb250ZW50PlxuICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwiYWN0aXZlXCI+QWN0aXZlPC9TZWxlY3RJdGVtPlxuICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwiaW5hY3RpdmVcIj5JbmFjdGl2ZTwvU2VsZWN0SXRlbT5cbiAgICAgICAgICA8U2VsZWN0SXRlbSB2YWx1ZT1cImVycm9yXCI+RXJyb3I8L1NlbGVjdEl0ZW0+XG4gICAgICAgIDwvU2VsZWN0Q29udGVudD5cbiAgICAgIDwvU2VsZWN0PlxuXG4gICAgICA8U2VsZWN0IHZhbHVlPXtmaWx0ZXJzLmNhcGFiaWxpdHl9IG9uVmFsdWVDaGFuZ2U9e2hhbmRsZUNhcGFiaWxpdHlDaGFuZ2V9PlxuICAgICAgICA8U2VsZWN0VHJpZ2dlciBjbGFzc05hbWU9XCJ3LVsxODBweF1cIj5cbiAgICAgICAgICA8U2VsZWN0VmFsdWUgcGxhY2Vob2xkZXI9XCJGaWx0ZXIgYnkgY2FwYWJpbGl0eVwiIC8+XG4gICAgICAgIDwvU2VsZWN0VHJpZ2dlcj5cbiAgICAgICAgPFNlbGVjdENvbnRlbnQ+XG4gICAgICAgICAge2F2YWlsYWJsZUNhcGFiaWxpdGllcy5tYXAoKGNhcGFiaWxpdHkpID0+IChcbiAgICAgICAgICAgIDxTZWxlY3RJdGVtIGtleT17Y2FwYWJpbGl0eX0gdmFsdWU9e2NhcGFiaWxpdHl9PlxuICAgICAgICAgICAgICB7Y2FwYWJpbGl0eX1cbiAgICAgICAgICAgIDwvU2VsZWN0SXRlbT5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9TZWxlY3RDb250ZW50PlxuICAgICAgPC9TZWxlY3Q+XG5cbiAgICAgIDxTZWxlY3QgdmFsdWU9e2ZpbHRlcnMubW9kZWx9IG9uVmFsdWVDaGFuZ2U9e2hhbmRsZU1vZGVsQ2hhbmdlfT5cbiAgICAgICAgPFNlbGVjdFRyaWdnZXIgY2xhc3NOYW1lPVwidy1bMTgwcHhdXCI+XG4gICAgICAgICAgPFNlbGVjdFZhbHVlIHBsYWNlaG9sZGVyPVwiRmlsdGVyIGJ5IG1vZGVsXCIgLz5cbiAgICAgICAgPC9TZWxlY3RUcmlnZ2VyPlxuICAgICAgICA8U2VsZWN0Q29udGVudD5cbiAgICAgICAgICB7YXZhaWxhYmxlTW9kZWxzLm1hcCgobW9kZWwpID0+IChcbiAgICAgICAgICAgIDxTZWxlY3RJdGVtIGtleT17bW9kZWx9IHZhbHVlPXttb2RlbH0+XG4gICAgICAgICAgICAgIHttb2RlbH1cbiAgICAgICAgICAgIDwvU2VsZWN0SXRlbT5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9TZWxlY3RDb250ZW50PlxuICAgICAgPC9TZWxlY3Q+XG5cbiAgICAgIHtoYXNBY3RpdmVGaWx0ZXJzICYmIChcbiAgICAgICAgPEJ1dHRvblxuICAgICAgICAgIHZhcmlhbnQ9XCJnaG9zdFwiXG4gICAgICAgICAgc2l6ZT1cInNtXCJcbiAgICAgICAgICBvbkNsaWNrPXtjbGVhckZpbHRlcnN9XG4gICAgICAgICAgaWNvbj17PFggY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+fVxuICAgICAgICA+XG4gICAgICAgICAgQ2xlYXIgRmlsdGVyc1xuICAgICAgICA8L0J1dHRvbj5cbiAgICAgICl9XG5cbiAgICAgIDxCdXR0b25cbiAgICAgICAgdmFyaWFudD1cIm91dGxpbmVcIlxuICAgICAgICBzaXplPVwic21cIlxuICAgICAgICBpY29uPXs8U2xpZGVyc0hvcml6b250YWwgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+fVxuICAgICAgPlxuICAgICAgICBNb3JlIEZpbHRlcnNcbiAgICAgIDwvQnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufTtcbiJdfQ = Object.values(filters).some(Boolean);
    return (<div className="flex flex-wrap items-center gap-4">
      <Select_1.Select value= {filters.status} onValueChange={handleStatusChange}>
        <Select_1.SelectTrigger className="w-[180px]">
          <Select_1.SelectValue placeholder="Filter by status"/>
        </Select_1.SelectTrigger>
        <Select_1.SelectContent>
          <Select_1.SelectItem value="active">Active</Select_1.SelectItem>
          <Select_1.SelectItem value="inactive">Inactive</Select_1.SelectItem>
          <Select_1.SelectItem value="error">Error</Select_1.SelectItem>
        </Select_1.SelectContent>
      </Select_1.Select>

      <Select_1.Select value={filters.capability} onValueChange={handleCapabilityChange}>
        <Select_1.SelectTrigger className="w-[180px]">
          <Select_1.SelectValue placeholder="Filter by capability"/>
        </Select_1.SelectTrigger>
        <Select_1.SelectContent>
          {availableCapabilities.map((capability) => (<Select_1.SelectItem key={capability} value={capability}>
              {capability}
            </Select_1.SelectItem>))}
        </Select_1.SelectContent>
      </Select_1.Select>

      <Select_1.Select value={filters.model} onValueChange={handleModelChange}>
        <Select_1.SelectTrigger className="w-[180px]">
          <Select_1.SelectValue placeholder="Filter by model"/>
        </Select_1.SelectTrigger>
        <Select_1.SelectContent>
          {availableModels.map((model) => (<Select_1.SelectItem key={model} value={model}>
              {model}
            </Select_1.SelectItem>))}
        </Select_1.SelectContent>
      </Select_1.Select>

      {hasActiveFilters && (<Button_1.Button variant="ghost" size="sm" onClick={clearFilters} icon={<lucide_react_1.X className="h-4 w-4"/>}>
          Clear Filters
        </Button_1.Button>)}

      <Button_1.Button variant="outline" size="sm" icon={<lucide_react_1.SlidersHorizontal className="h-4 w-4"/>}>
        More Filters
      </Button_1.Button>
    </div>);
};
exports.AgentFilters = AgentFilters;
//# sourceMappingURL=data=
export {};
