import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
// @ts-checkimport React from 'react';

interface PreLoaderProps {
  size?: string;
  className?: string;
}

export function PreLoader({ 
  size = "16",
  className = "" 
}: PreLoaderProps): React.JSX.Element {
  return (
    <div 
      className={`h-${size} w-${size} animate-spin rounded-full border-4 border-solid border-primary border-t-transparent ${className}`}
    />
  );
}

export function FullScreenLoader(): React.JSX.Element {
  return (
    <div
      id="preloader"
      className="fixed left-0 top-0 z-999999 flex h-screen w-screen items-center justify-center bg-theme-bg-primary"
    >
      <div 
        className="h-16 w-16 animate-spin rounded-full border-4 border-solid border-[var(--theme-loader)] border-t-transparent"
      />
    </div>
  );
}

export type { PreLoaderProps };
//# sourceMappingURL=Preloader.js.map
