import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import { FC, useEffect, useState, JSX } from 'react';
import type { Agent, Workflow } from '@the-new-fuse/../types';
import { FC, ReactNode, useCallback, useEffect, useState } from 'react';
import type { Agent, Workflow } from '@the-new-fuse/../types';
import React from 'react';
import type { Agent, Workflow } from '@the-new-fuse/../types';
import { Agent, AgentStatus } from '@the-new-fuse/types';
import type { Agent, Workflow } from '@the-new-fuse/../types';
import { Card } from '@the-new-fuse/ui/Card';

interface AgentCardProps {
  agent: Agent;
  onDelete?: (id: string) => void;
  agent: Agent;
  onSelect?: (agent: Agent) => void;
  onEdit?: (agent: Agent) => void;
  onDelete?: (agent: Agent) => void;
}

const statusColors: Record<AgentStatus, string> = {
  idle: 'bg-green-100 text-green-800',
  busy: 'bg-yellow-100 text-yellow-800',
  error: 'bg-red-100 text-red-800',
  offline: 'bg-gray-100 text-gray-800',
};

export const AgentCard: (React as unknown).FC<AgentCardProps> = ({
  agent,
  onSelect,
  onEdit,
  onDelete,
}) => {
  return (
    <Card
      className="hover:shadow-md transition-shadow"
      title={
        <div className="flex items-center justify-between">
          <h3 className="text-lg font-medium text-gray-900">{(agent as unknown).name}</h3>
          <span className={`px-2 py-1 rounded-full text-xs font-medium ${statusColors[(agent as unknown).status]}`}>
            {(agent as unknown).status}
          </span>
        </div>
      }
      subtitle={
        <div className="mt-1">
          <p className="text-sm text-gray-500">{(agent as unknown).description}</p>
          <p className="text-xs text-gray-400 mt-1">Type: {(agent as unknown).type}</p>
        </div>
      }
    >
      <div className="space-y-4">
        <div>
          <h4 className="text-sm font-medium text-gray-700">Capabilities</h4>
          <div className="mt-1 flex flex-wrap gap-1">
            {(agent as unknown).capabilities.map((capability) ): JSX.Element => (
              <span
                key={capability}
                className="px-2 py-1 rounded-full bg-blue-100 text-blue-800 text-xs"
              >
                {capability}
              </span>
            ))}
          </div>
        </div>
        
        <div className="flex items-center justify-between text-sm text-gray-500">
          <span>Version: {(agent as unknown).(metadata as unknown).version}</span>
          <span>Last active: {(agent as unknown).(metadata as unknown).lastActive?.toLocaleString()}</span>
        </div>
      </div>

      <div className="mt-4 flex justify-end space-x-2">
        {onSelect && (
          <button
            onClick={(e: React.MouseEvent) => () => onSelect(agent)}
            className="px-3 py-1 text-sm text-blue-600 hover:bg-blue-50 rounded-md transition-colors"
          >
            Select
          </button>
        )}
        {onEdit && (
          <button
            onClick={(e: React.MouseEvent) => () => onEdit(agent)}
            className="px-3 py-1 text-sm text-gray-600 hover:bg-gray-50 rounded-md transition-colors"
          >
            Edit
          </button>
        )}
        {onDelete && (
          <button
            onClick={(e: React.MouseEvent) => () => onDelete(agent)}
            className="px-3 py-1 text-sm text-red-600 hover:bg-red-50 rounded-md transition-colors"
          >
            Delete
          </button>
        )}
      </div>
    </Card>
  );
};
