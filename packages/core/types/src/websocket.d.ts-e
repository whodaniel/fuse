export type AgentStatus = 'Idle' | 'Active' | 'Busy' | 'Error';
export interface Agent {
    id: string;
    name: string;
    status: AgentStatus;
    lastActive: string;
    capabilities: string[];
}
export interface Message {
    id: string;
    content: string;
    timestamp: string;
    sender: Agent;
    recipient: Agent;
    type: 'text' | 'command' | 'result' | 'error';
    status: 'sent' | 'delivered' | 'read' | 'error';
}
export interface WebSocketMessage<T = any> {
    type: string;
    payload: T;
    timestamp: string;
    priority?: 'HIGH' | 'MEDIUM' | 'LOW';
}
export interface WebSocketState {
    connected: boolean;
    error: string | null;
    lastMessage: WebSocketMessage | null;
}
export interface WebSocketConfig {
    url: string;
    reconnectInterval?: number;
    maxReconnectAttempts?: number;
    heartbeatInterval?: number;
}
