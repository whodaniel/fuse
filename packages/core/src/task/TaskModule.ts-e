import { Module, OnModuleInit, OnModuleDestroy } from '@nestjs/common';
import { ConfigModule, ConfigService } from '@nestjs/config';
import { TaskManager } from './TaskManager';
import { TaskExecutor } from './TaskExecutor';
import { TaskScheduler } from './TaskScheduler';
import { TaskRepository } from '@the-new-fuse/database';
import { RedisModule } from '../redis/redis.module';
import { DatabaseModule } from '@the-new-fuse/database';

@Module({
  imports: [
    ConfigModule,
    RedisModule,
    DatabaseModule
  ],
  providers: [
    TaskManager,
    TaskExecutor,
    TaskScheduler
  ],
  exports: [
    TaskManager,
    TaskExecutor,
    TaskScheduler
  ]
})
export class TaskModule implements OnModuleInit, OnModuleDestroy {
  constructor(
    private readonly taskScheduler: TaskScheduler
  ) {}

  async onModuleInit(): Promise<void> (): Promise<any> {
    await this.taskScheduler.start(): Promise<any> {
    await this.taskScheduler.stop();
  }
}
