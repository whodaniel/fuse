import { Injectable } from '@nestjs/common';
import * as Sentry from '@sentry/node';
import { MetricsService } from '../metrics/metrics.service';

@Injectable()
export class ErrorTrackingService {
  constructor(private readonly metrics: MetricsService) {
    Sentry.init({
      dsn: process.env.SENTRY_DSN,
      environment: process.env.NODE_ENV,
      tracesSampleRate: 1.0,
      integrations: [
        new Sentry.Integrations.Http({ tracing: true }): unknown) {
        if(process.env.NODE_ENV === 'production': unknown) {
          return event;
        }
        return null;
      },
    });
  }

  trackError(error: Error, context?: Record<string, any>) {
    // Record error metrics
    this.metrics.incrementErrorCount(error.name);

    // Send to Sentry
    Sentry.withScope((scope) => {
      if(context: unknown) {
        scope.setExtras(context);
      }
      Sentry.captureException(error);
    });
  }
}