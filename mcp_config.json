{
  "version": "1.0",
  "servers": {
    "the-new-fuse-mcp": {
      "host": "localhost",
      "port": 3000,
      "protocol": "http",
      "type": "mcp",
      "transport": "streamable-http",
      "capabilities": ["file-operations", "build-operations", "agent-coordination", "state-management"],
      "description": "Model-Controller-Provider server for The New Fuse with file, build, and agent coordination capabilities",
      "enabled": true
    },
    "main": {
      "host": "localhost",
      "port": 3000,
      "protocol": "http",
      "enabled": true
    },
    "postgres": {
      "type": "database",
      "POSTGRES_CONNECTION_STRING": "postgresql://postgres:postgres@localhost:5432/fuse",
      "enabled": true
    },
    "redis": {
      "type": "cache",
      "REDIS_HOST": "localhost",
      "REDIS_PORT": 6379,
      "REDIS_PASSWORD": "",
      "enabled": true
    },
    "openai": {
      "type": "llm",
      "provider": "openai",
      "OPENAI_API_KEY": "YOUR_OPENAI_API_KEY",
      "models": ["gpt-3.5-turbo", "gpt-4"],
      "enabled": true
    },
    "anthropic": {
      "type": "llm",
      "provider": "anthropic",
      "ANTHROPIC_API_KEY": "YOUR_ANTHROPIC_API_KEY",
      "models": ["claude-2", "claude-instant-1"],
      "enabled": false
    },
    "brave-search": {
      "type": "search",
      "provider": "brave",
      "BRAVE_API_KEY": "YOUR_BRAVE_SEARCH_API_KEY",
      "enabled": false
    },
    "text-analysis": {
      "type": "agent",
      "capabilities": ["text-analysis", "sentiment-analysis", "entity-extraction"],
      "enabled": true
    },
    "code-generation": {
      "type": "agent",
      "capabilities": ["code-generation", "code-review", "code-explanation"],
      "enabled": true
    },
    "workflow-engine": {
      "type": "orchestration",
      "enabled": true
    }
  },
  "agent-discovery": {
    "auto-discovery": true,
    "scan-interval": 300,
    "capability-validation": true
  },
  "security": {
    "jwt-secret": "CHANGE_THIS_TO_A_SECURE_SECRET_KEY",
    "jwt-expiration": 3600,
    "rate-limit": {
      "window-ms": 60000,
      "max-requests": 100
    },
    "cors": {
      "allowed-origins": ["http://localhost:3000", "http://localhost:5173"],
      "allowed-methods": ["GET", "POST", "PUT", "DELETE", "OPTIONS"],
      "allowed-headers": ["Content-Type", "Authorization"]
    }
  },
  "logging": {
    "level": "info",
    "format": "json",
    "file": "./mcp/logs/mcp-server.log"
  },
  "ui": {
    "dashboard-enabled": true,
    "theme": "light"
  },
  "mcpServers": {
    "the-new-fuse-mcp": {
      "command": "node",
      "args": ["./src/mcp/server.js"],
      "env": {
        "PORT": "3000",
        "WORKSPACE_ROOT": "./",
        "LOG_LEVEL": "info",
        "ENABLE_STREAMABLE_HTTP": "true",
        "ENABLE_PROGRESS_NOTIFICATIONS": "true",
        "ENHANCED_UI": "true"
      },
      "description": "The New Fuse MCP Server with file, build, and agent coordination capabilities"
    },
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "--allow-dir", "./data"
      ]
    },
    "brave-search": {
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e", "BRAVE_API_KEY",
        "modelcontextprotocol/brave-search"
      ],
      "env": {
        "BRAVE_API_KEY": "YOUR_ACTUAL_BRAVE_SEARCH_API_KEY"
      }
    },
    "sqlite": {
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-v", "./db:/data/mcp/sqlite",
        "--db-path", "/data/mcp/sqlite/ai_data.db",
        "modelcontextprotocol/sqlite"
      ]
    },
    "shell": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-shell",
        "--allow-commands", "ls,cat,grep,find,echo,pwd"
      ]
    },
    "http": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-http",
        "--allow-hosts", "api.github.com,api.openai.com"
      ]
    },
    "code-analysis": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-code-analysis",
        "--allow-dir", "./"
      ]
    },
    "postgres": {
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e", "POSTGRES_CONNECTION_STRING",
        "modelcontextprotocol/postgres"
      ],
      "env": {
        "POSTGRES_CONNECTION_STRING": "postgresql://postgres:postgres@localhost:5432/fuse"
      }
    },
    "vector-db": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-vector-db",
        "--db-path", "./data/vector-db"
      ]
    },
    "gdrive": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-v",
        "mcp-gdrive:/gdrive-server",
        "-e",
        "GDRIVE_CREDENTIALS_PATH=/gdrive-server/credentials.json",
        "mcp/gdrive"
      ]
    },
    "context7-server": {
      "command": "node",
      "args": [
        "/Users/danielgoldberg/Documents/Cline/MCP/context7-server/build/index.js"
      ]
    },
    "applescript_execute": {
      "command": "/Users/danielgoldberg/.nvm/versions/node/v18.20.5/bin/npx",
      "args": [
        "@peakmojo/applescript-mcp"
      ]
    },
    "mcp-config-manager": {
      "command": "node",
      "args": [
        "/Users/danielgoldberg/Desktop/A1-Inter-LLM-Com/The New Fuse/scripts/mcp-config-manager-server.js"
      ]
    },
    "browsermcp": {
      "command": "npx",
      "args": [
        "@browsermcp/mcp@latest"
      ]
    },
    "MCP_DOCKER": {
      "command": "docker",
      "args": [
        "run",
        "-l",
        "mcp.client=claude-desktop",
        "--rm",
        "-i",
        "alpine/socat",
        "STDIO",
        "TCP:host.docker.internal:8811"
      ]
    }
  }
}
