name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
      
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      
      - name: Run Unit Tests
        run: yarn test:unit
        
      - name: Run Integration Tests
        run: yarn test:integration
      
      - name: Run E2E Tests
        run: yarn test:e2e

      - name: Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests,integration,e2e
          fail_ci_if_error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Generate Version Tag
        id: version
        run: |
          echo "tag=$(date +%Y%m%d)-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push Docker Images
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/thefuse:${{ steps.version.outputs.tag }}
            ${{ secrets.DOCKER_USERNAME }}/thefuse:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [staging, production]
    environment:
      name: ${{ matrix.environment }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > kubeconfig
          export KUBECONFIG=./kubeconfig

      - name: Update Deployment Version
        run: |
          VERSION_TAG=$(date +%Y%m%d)-${GITHUB_SHA::7}
          sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/thefuse:${VERSION_TAG}|g" k8s/${{ matrix.environment }}/deployment.yaml
        
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/${{ matrix.environment }}/
          kubectl rollout status deployment/thefuse -n ${{ matrix.environment }}

      - name: Verify Deployment
        run: |
          kubectl get pods -n ${{ matrix.environment }} -l app=thefuse
          
      - name: Rollback on Failure
        if: failure()
        run: |
          kubectl rollout undo deployment/thefuse -n ${{ matrix.environment }}
          exit 1
