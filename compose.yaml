services:
  ts-api:
    build:
      context: ./apps/api
      dockerfile: ../api/Dockerfile
    container_name: ts-api
    restart: unless-stopped
    init: true
    # Exposes the API on port 3001 as per Dockerfile
    ports:
      - "3001:3001"
    # Use env_file if .env exists in ./apps/api
    env_file:
      - ./apps/api/.env
    networks:
      - fuse-net
    depends_on:
      - redis
      - postgres

  ts-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ts-backend
    restart: unless-stopped
    init: true
    # Exposes the backend on port 3000 as per Dockerfile
    ports:
      - "3002:3000"
    # Use env_file if .env exists in ./backend
    env_file:
      - ./backend/.env
    networks:
      - fuse-net
    depends_on:
      - redis
      - postgres

  ts-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ts-frontend
    restart: unless-stopped
    init: true
    # Exposes the frontend on port 3000 as per Dockerfile
    ports:
      - "3000:3000"
    # Use env_file if .env exists in ./frontend
    env_file:
      - ./frontend/.env
    networks:
      - fuse-net
    depends_on:
      - ts-api
      - ts-backend

  # --- External Services ---
  postgres:
    image: postgres:latest
    container_name: fuse-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: fuseuser
      POSTGRES_PASSWORD: fusepass
      POSTGRES_DB: fusedb
    ports:
      - "5432:5432"
    networks:
      - fuse-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fuseuser"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Uncomment the following to persist data
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: fuse-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - fuse-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Uncomment the following to persist data
    # volumes:
    #   - redis_data:/data

# Networks
networks:
  fuse-net:
    driver: bridge

# Uncomment the following if you want to persist database/cache data
#volumes:
#  postgres_data:
#  redis_data:
